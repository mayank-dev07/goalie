// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @unique @default(uuid())
  wallet             String      @unique
  name               String
  challengesCreated  Challenge[] @relation("InitiatedChallenges")
  challengesReceived Challenge[] @relation("ReceivedChallenges")
  createdAt          DateTime    @default(now())
}

model Challenge {
  id                  String    @id @unique @default(uuid())
  wallet              String
  initiator           User      @relation("InitiatedChallenges", fields: [wallet], references: [wallet])
  challengers         User[]    @relation("ReceivedChallenges")
  gridIndex           Int
  selectedGrid        Int?
  totalAmount         Float
  createChallengeSig  String
  correctGuessesSig   String[]  @default([])
  incorrectGuessesSig String[]  @default([])
  createdAt           DateTime  @default(now())
  completedAt         DateTime?
}

model Transaction {
  TxID        Int      @id @default(autoincrement())
  challengeId String
  TxHash      String
  ToUser      String
  FromUser    String
  TokenAmount Float
  Token       String
  TxState     String
  Timestamp   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
